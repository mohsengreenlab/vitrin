PartnerSystems Main - Manual Deployment Checklist
================================================

Use this checklist as you work through the step-by-step deployment guide.

PREREQUISITES
-------------
[ ] VPS access confirmed (SSH as root or sudo user)
[ ] Ubuntu 20.04+ confirmed (uname -a)
[ ] Domain partnersystems.online DNS points to VPS IP
[ ] SingleStore credentials ready:
    [ ] Host
    [ ] Port
    [ ] Username  
    [ ] Password
    [ ] Database name
[ ] VPS IP whitelisted in SingleStore firewall

STEP 1: PREPARE VPS ENVIRONMENT
--------------------------------
[ ] System updated: sudo apt update && sudo apt upgrade -y
[ ] Node.js 20.x installed
    [ ] Test: node --version (should show v20.x.x)
[ ] PM2 installed globally
    [ ] Test: pm2 --version
[ ] Nginx installed and running
    [ ] Test: sudo systemctl status nginx (should show active)
    [ ] Test: sudo nginx -t (should show syntax ok)
[ ] Certbot installed
    [ ] Test: certbot --version
[ ] Port 3006 available
    [ ] Test: sudo netstat -tlnp | grep :3006 (should return nothing)

STEP 2: CREATE USER AND DIRECTORIES
------------------------------------
[ ] User created: sudo useradd -m -s /bin/bash partnersystems
    [ ] Test: id partnersystems (should show uid and gid)
[ ] Directories created:
    [ ] /home/partnersystems/app
    [ ] /home/partnersystems/logs
    [ ] /home/partnersystems/app/certs
    [ ] Test: ls -la /home/partnersystems/

STEP 3: UPLOAD AND INSTALL APPLICATION
---------------------------------------
[ ] Archive created on local machine
    [ ] Test: ls -lh partnersystems.tar.gz
[ ] Uploaded to VPS /tmp/
    [ ] Test: ls -lh /tmp/partnersystems.tar.gz
[ ] Extracted to /home/partnersystems/app/
    [ ] Test: ls -la /home/partnersystems/app/
    [ ] Test: find /home/partnersystems/app -type f | wc -l (many files)
[ ] SSL certificate in place (if available)
    [ ] Test: ls -l /home/partnersystems/app/certs/singlestore_bundle.pem

STEP 4: CONFIGURE APPLICATION
------------------------------
[ ] .env file created at /home/partnersystems/app/.env
[ ] SINGLESTORE_HOST set (not placeholder)
[ ] SINGLESTORE_PORT set (3333 or 3306)
[ ] SINGLESTORE_USER set (not placeholder)
[ ] SINGLESTORE_PASSWORD set (not placeholder)
[ ] SINGLESTORE_DATABASE set (not placeholder)
[ ] SESSION_SECRET generated and set
    [ ] Used: openssl rand -base64 32
[ ] PORT=3006 confirmed
[ ] NODE_ENV=production confirmed
[ ] Test: sudo cat /home/partnersystems/app/.env | grep SINGLESTORE_HOST

STEP 5: SET PERMISSIONS
-----------------------
[ ] Ownership set to partnersystems:partnersystems
    [ ] Test: ls -ld /home/partnersystems/app
[ ] Home directory secured (700)
    [ ] Test: ls -ld /home/partnersystems (should show drwx------)
[ ] .env file secured (600)
    [ ] Test: ls -l /home/partnersystems/app/.env (should show -rw-------)
[ ] App directory readable (755)
[ ] Logs directory writable (755)

STEP 6: INSTALL AND BUILD
-------------------------
[ ] Dependencies installed: sudo -u partnersystems npm install
    [ ] Test: ls -d /home/partnersystems/app/node_modules
    [ ] Test: ls /home/partnersystems/app/node_modules | wc -l (many packages)
[ ] Application built: sudo -u partnersystems npm run build
    [ ] Test: ls -la /home/partnersystems/app/dist
    [ ] Test: ls -l /home/partnersystems/app/dist/public/index.html
[ ] (Optional) Dev dependencies pruned: npm prune --production

STEP 7: TEST DATABASE (CRITICAL CHECKPOINT)
--------------------------------------------
[ ] Database test script executed
    [ ] cd /home/partnersystems/app
    [ ] sudo -u partnersystems node deployment/scripts/test-db.js
[ ] Test results:
    [ ] ✓ All required environment variables present
    [ ] ✓ Connection established
    [ ] ✓ Test query successful
    [ ] ✓ Database health check PASSED
[ ] No error messages displayed

>>> DO NOT PROCEED UNTIL DATABASE TEST PASSES <<<

STEP 8: CONFIGURE PM2
---------------------
[ ] PM2 config copied to app directory
    [ ] Test: cat /home/partnersystems/app/ecosystem.config.cjs
[ ] Application started with PM2
    [ ] sudo -u partnersystems pm2 start ecosystem.config.cjs
[ ] PM2 status check:
    [ ] Test: sudo -u partnersystems pm2 status
    [ ] Status shows: partnersystems | online
[ ] PM2 logs show success:
    [ ] Test: sudo -u partnersystems pm2 logs partnersystems --lines 30
    [ ] Logs show: "Successfully connected to SingleStore database"
    [ ] Logs show: "serving on port 5000" (internal)
[ ] PM2 configuration saved
    [ ] sudo -u partnersystems pm2 save
[ ] PM2 startup configured
    [ ] sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u partnersystems --hp /home/partnersystems
[ ] Local app test:
    [ ] Test: curl -I http://localhost:3006
    [ ] Should return: HTTP/1.1 200 OK

STEP 9: CONFIGURE NGINX
-----------------------
[ ] Nginx config copied
    [ ] sudo cp .../nginx-partnersystems.conf /etc/nginx/sites-available/partnersystems
    [ ] Test: cat /etc/nginx/sites-available/partnersystems | grep server_name
[ ] Site enabled (symlink created)
    [ ] sudo ln -sf /etc/nginx/sites-available/partnersystems /etc/nginx/sites-enabled/
    [ ] Test: ls -l /etc/nginx/sites-enabled/partnersystems
[ ] Nginx configuration test:
    [ ] Test: sudo nginx -t
    [ ] Output: "syntax is ok" and "test is successful"
[ ] Nginx reloaded
    [ ] sudo systemctl reload nginx
    [ ] Test: sudo systemctl status nginx (should show active)
[ ] HTTP access test:
    [ ] Test: curl -I http://partnersystems.online

STEP 10: CONFIGURE SSL CERTIFICATE
-----------------------------------
[ ] DNS verification:
    [ ] Test: dig partnersystems.online +short (should show VPS IP)
    [ ] Test: dig www.partnersystems.online +short (should show VPS IP)
[ ] Cloudflare disabled (if using):
    [ ] Set to "DNS Only" (gray cloud) for both partnersystems.online and www
    [ ] Wait 2-3 minutes
    [ ] Test: dig partnersystems.online +short (should be VPS IP, not Cloudflare)
[ ] SSL certificate obtained:
    [ ] sudo certbot --nginx -d partnersystems.online -d www.partnersystems.online
    [ ] Email address provided
    [ ] Terms accepted
    [ ] Option 2 selected (redirect HTTP to HTTPS)
[ ] Certificate verification:
    [ ] Test: sudo certbot certificates
    [ ] Shows partnersystems.online with future expiry date
    [ ] Test: sudo ls -l /etc/letsencrypt/live/partnersystems.online/
[ ] HTTPS access test:
    [ ] Test: curl -I https://partnersystems.online (should show HTTP/2 200)
    [ ] Test: curl -I http://partnersystems.online (should show 301 redirect)
[ ] Browser test:
    [ ] Open: https://partnersystems.online
    [ ] Green lock icon visible
    [ ] Certificate valid

STEP 11: RE-ENABLE CLOUDFLARE (OPTIONAL)
-----------------------------------------
[ ] Cloudflare proxy enabled (if desired):
    [ ] Set to "Proxied" (orange cloud) for both domains
    [ ] SSL/TLS mode set to "Full (strict)"
    [ ] Test: curl -I https://partnersystems.online (still works)
    [ ] Browser test: site still loads

STEP 12: FINAL VERIFICATION
----------------------------
[ ] PM2 status healthy:
    [ ] Test: sudo -u partnersystems pm2 status
    [ ] Shows: partnersystems | online | 0 restarts
[ ] PM2 logs clean:
    [ ] Test: sudo -u partnersystems pm2 logs partnersystems --lines 50 --nostream
    [ ] No errors visible
[ ] Database connection verified:
    [ ] Test: cd /home/partnersystems/app
    [ ] Test: sudo -u partnersystems node deployment/scripts/test-db.js
    [ ] Shows: ✓ Database health check PASSED
[ ] Web access verified:
    [ ] Test: curl -I http://localhost:3006 (200 OK)
    [ ] Test: curl -I https://partnersystems.online (HTTP/2 200)
    [ ] Test: curl -I https://www.partnersystems.online (works)
[ ] SSL certificate valid:
    [ ] Test: sudo certbot certificates | grep partnersystems.online -A 5
    [ ] Shows expiry ~90 days in future
[ ] Other apps not affected:
    [ ] Test: sudo netstat -tlnp | grep -E ':(8000|3001|3002|3003|3004|3005|3006|3007|3006)'
    [ ] All expected ports visible
[ ] Browser final test:
    [ ] Open: https://partnersystems.online
    [ ] Page loads successfully
    [ ] SSL valid (green lock)
    [ ] No console errors (F12)
    [ ] Application functions correctly

POST-DEPLOYMENT VERIFICATION
-----------------------------
[ ] Test utility scripts:
    [ ] Database test: works
    [ ] Update config script: accessible
    [ ] Rollback script: accessible
[ ] Document backup locations:
    [ ] .env backups at: /home/partnersystems/app/.env.backup.*
[ ] Maintenance commands documented and saved
[ ] All other apps verified still running:
    [ ] FreePaper (8000)
    [ ] Kerit (3001, 3002)
    [ ] TrustLine (3003)
    [ ] SmartCover (3004)
    [ ] TopTeachers (3005)
    [ ] PartnerSystems (3006)
    [ ] SiahRokh (3007)

SECURITY VERIFICATION
---------------------
[ ] App runs as partnersystems user (not root)
[ ] .env file permissions: 600
[ ] Home directory permissions: 700
[ ] Database uses SSL/TLS connection
[ ] All HTTP redirects to HTTPS
[ ] Session secret is random (not placeholder)
[ ] SSL certificate trusted and valid

DEPLOYMENT COMPLETE
-------------------
Date: _____________________
Deployed By: ______________
Notes: ____________________
__________________________
__________________________

Application URL: https://partnersystems.online
Status: [ ] SUCCESS  [ ] ISSUES (describe): _______________________
